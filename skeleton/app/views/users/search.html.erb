<h1>Search!</h1>

<!-- <form action="/users/search" method="GET">
  <input
    type="text"
    name="query"
    value="<%= @query %>">

  <input type="submit" value="Search Users!">
</form> -->

<div class="users-search">
  <input type="text" name="query">

  <ul class="users">

  </ul>
</div>
<!--
<ul>
  <% @users.each do |user| %>
    <li>
      <%= link_to user.username, user_url(user) %>
      <%= render "follows/form", user: user %>
    </li>
  <% end %>
</ul> -->

<script>

$.UsersSearch = function(el) {
  this.$el = $(el);
  this.$input = this.$el.find('input');
  this.$ul = this.$el.find('ul.users');


  this.$input.on('input', this.handleInput.bind(this));
}

$.UsersSearch.prototype.handleInput = function(event) {
  var val = this.$input.val();
  $.ajax({
    url: '/users/search',
    dataType: 'json',
    type: 'GET',
    data: {
      'query': val
    },
    success: function(data){ // data = array of @users
      console.log(data);
      this.renderResults(data);
    }.bind(this),

  })
}

$.UsersSearch.prototype.renderResults = function(users) {
  this.$ul.empty();
  $.each(users, function(idx, user){
    var $li = $('<li></li>');
    var $a = $("<a>");
    $a.attr("href", '/users/' + user.id).text(user.username);

    var $button = $("<button>");
    var followState = (user.followed) ? "followed" : "unfollowed";
    $button.followToggle({
      userId: user.id,
      followState: followState
    });

    $li.append($a).append($button);

    this.$ul.append($li);
  }.bind(this));
};

$.fn.usersSearch = function () {
  return this.each(function () {
    new $.UsersSearch(this);
  });
};

$(function () {
  $(".users-search").usersSearch();
});

</script>
